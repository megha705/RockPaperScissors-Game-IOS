//
//  ViewController.swift
//  RockPaperScissors
//
//  Created by –í–ª–∞–¥–∏—Å–ª–∞–≤ on 01.10.2020.
//

import UIKit

class ViewController: UIViewController {
    //–∑–≤—É–∫–æ–≤—ã–µ –∫–æ–Ω—Å—Ç–∞–Ω—Ç—ã
let chikClickSound = SimpleSound(named: "chik")
let playAgainSound = SimpleSound(named: "resetButton")
let loseSound = SimpleSound(named: "loseMan")
let roborHeadSound = SimpleSound(named: "roboSound")
let winSound = SimpleSound(named: "winwin")
let drawSound = SimpleSound(named: "drawSound")
let absolutlyWinner = SimpleSound(named: "absolutlyWinner")
    
//–ø–æ–¥–∫–ª—é—á–µ–Ω—ã —Ä–æ–∑–µ—Ç–∫–∏ —Å –æ–±—ä–µ–∫—Ç–∞–º–∏!
    
    @IBOutlet weak var robotHead: UIButton!
    @IBOutlet weak var statusGame: UILabel!
    @IBOutlet weak var rockPalyerChoice: UIButton!
    @IBOutlet weak var scissorsPlayerChoice: UIButton!
    @IBOutlet weak var paperPlayerChoise: UIButton!
    @IBOutlet weak var playAgainChoise: UIButton!
    
    
    
    @IBOutlet weak var playerScore: UILabel!
    @IBOutlet weak var computerScore: UILabel!
    
    var computerScoreResult = 0
    var playerScoreResult = 0
    
    override func viewDidLoad() { //—Ñ—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ —Å–æ —Å—Ç–∞—Ä—Ç–∞ —Ç–æ–ª—å–∫–æ —Ç–æ–ª—å–∫–æ –≤–∫–ª –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
        super.viewDidLoad()
        playAgainChoise.isHidden = true
    }
    
    func play(_ sign: Sign) { //–±–µ—Ä–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –∏–≥—Ä–æ–∫–∞ - –≤—ã–±–æ—Ä –∏–≥—Ä–æ–∫–∞
        let computerSign = randomSign()
        robotHead.setTitle(computerSign.emoji, for: .normal) //–º–µ–Ω—è–µ–º –≥–æ–ª–æ–≤—É —Ä–æ–±–æ—Ç–∞ –Ω–∞ —ç–º–æ–¥–∑–∏ —Å–¥–µ–ª–∞–Ω–Ω—ã–π –≤ Sign
        switch sign { //–∏–≥—Ä–∞–µ–º –∫–µ–π—Å—ã –≤—ã–±–æ—Ä–∞ –∏ –ø—Ä—è—á–µ–º –Ω–µ –Ω—É–∂–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã!
        case .rock:
            rockPalyerChoice.isHidden = false
            paperPlayerChoise.isHidden = true
            scissorsPlayerChoice.isHidden = true
        case .scissors:
            rockPalyerChoice.isHidden = true
            scissorsPlayerChoice.isHidden = false
            paperPlayerChoise.isHidden = true
        case .paper:
            rockPalyerChoice.isHidden = true
            scissorsPlayerChoice.isHidden = true
            paperPlayerChoise.isHidden = false
        }
        
        let resultGame = sign.returnTitle(computerSign) // —Å–º–µ–Ω–∞ —Å—Ç–∞—Ç—É—Å–∞ –ø–æ—Ä–∞–∂–µ–Ω–∏–µ –∏–ª–∏ –ø–æ–±–µ–¥–∞! –±–µ—Ä–µ–º —Å—Ç–∞—Ç—É—Å—ã –∏ —ç–Ω—É–º–∞
        switch resultGame {
        case .win:
            playerScoreResult += 1
            self.playerScore.text = "üì±\(computerScoreResult):\(playerScoreResult)üë§"
            if playerScoreResult == 15 {
                self.view.backgroundColor = UIColor.yellow
                playerScoreResult = 0
                computerScoreResult = 0
                statusGame.text = "–ê–±—Å–æ–ª—é—Ç–Ω–∞—è –ø–æ–±–µ–¥–∞!!!"
                absolutlyWinner.play()
            }
            winSound.play()
            statusGame.text = "üéâ–ü–æ–±–µ–¥–∞!" //–º–µ–Ω—è–µ–ø —Ç–µ–∫—Å—Ç
            self.view.backgroundColor = UIColor.green //–º–µ–Ω—è–µ–º —Ü–≤–µ—Ç –æ–±–æ–µ–≤ –≤ —Å–ª—É—á–∞–∏ –≤—ã–∏–≥—Ä—ã—à–∞
        case .lose:
            computerScoreResult += 1
            self.playerScore.text = "üì±\(computerScoreResult):\(playerScoreResult)üë§"
            if computerScoreResult == 15 {
                self.view.backgroundColor = UIColor.brown
                computerScoreResult = 0
                playerScoreResult = 0
                statusGame.text = "–ü–æ–ª–Ω–æ—Å—Ç—å—é —É–Ω–∏—á—Ç–æ–∂–µ–Ω!"
            }
            loseSound.play()
            statusGame.text = "‚ò†Ô∏è–ü–æ—Ä–∞–∂–µ–Ω–∏–µ"
            self.view.backgroundColor = UIColor.red
        case .draw:
            drawSound.play()
            statusGame.text = "ü§ù–ù–∏—á—å—è"
            self.view.backgroundColor = UIColor.gray
        case .start:
            reset()
            statusGame.text = "–æ—à–∏–±–∫–∞"
            self.view.backgroundColor = UIColor.yellow
        }
        
        playAgainChoise.isHidden = false //–ø–∏—à–µ–º –≤ —Ñ—É–Ω–∫—Ü–∏–∏ play
    }
    
    func reset() { //—Å–±—Ä–æ—Å –∏–≥—Ä—ã –¥–æ –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è! –≤–æ–∑–≤—Ä–∞—Ç –∑–Ω–∞—á–µ–Ω–∏–π –ª–∞–¥–æ—à–µ–∫ + —Å–æ–∫—Ä—ã—Ç–∏–µ –∫–Ω–æ–ø–∫–∏
        
        
        statusGame.text = "–ö–∞–º–µ–Ω—å, –Ω–æ–∂–Ω–∏—Ü—ã –∏–ª–∏ –±—É–º–∞–≥–∞?" //–≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ—Å–ª–µ –Ω–∞–¥–∞–Ω–∏—è –Ω–∞ —Ä–µ—Å–µ—Ç
        self.view.backgroundColor = UIColor.black //–≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Ü–≤–µ—Ç –æ–±–æ–µ–º –ø–æ—Å–ª–µ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ —Ä–µ—Å–µ—Ç
        robotHead.setTitle("ü§ñ", for: .normal)
        rockPalyerChoice.isHidden = false
        scissorsPlayerChoice.isHidden = false
        paperPlayerChoise.isHidden = false
        playAgainChoise.isHidden = false
        
        playAgainChoise.isHidden = true //–º—ã –µ—â–µ —Ä–∞–∑ –ø–∏—à–µ–º —Å–ø—Ä—è—Ç–∞—Ç—å—Å—è –ø–æ—Å–ª–µ —Ç–æ–≥–æ –∫–∞–∫ –Ω–∞–∂–∞–ª–∏ –Ω–∞ –Ω–µ–µ –ø—Ä–∏ –æ–∫–æ–Ω–µ–Ω–æ–π –∏–≥—Ä–µ!
    }
    
//–¥–µ–π—Å—Ç–≤–∏—è —Å –∫–Ω–æ–ø–∫–∞–º–∏ –∫–∞–º–µ–Ω—å, –Ω–æ–∂–Ω–∏—Ü—ã, –±—É–º–∞–≥–∞ –∏ —Å—ã–≥—Ä–∞—Ç—å —Å–Ω–æ–≤–∞!
    @IBAction func ronorButtonPress(_ sender: Any) {
        roborHeadSound.play()
    }
    @IBAction func rockButtonPress(_ sender: Any) {
        play(.rock)
        chikClickSound.play()
    }
    
    @IBAction func scissorsButtonPress(_ sender: Any) {
        play(.scissors)
        chikClickSound.play()
    }
    @IBAction func paperButtonPress(_ sender: Any) {
        play(.paper)
        chikClickSound.play()
    }
    
    @IBAction func playAgainButtonPress(_ sender: Any) {
        reset()
        playAgainSound.play()
    }
}


